local N = {}

    local CoreGui = game:GetService("CoreGui")
    local TweenService = game:GetService("TweenService")

    function N:Notify(Text, Buttons, TweenTime, WaitForClick, DisappearTime)
        if not Text then return end
        TweenTime = TweenTime or 0.5
        WaitForClick = WaitForClick or false

        local ScreenGui = Instance.new("ScreenGui", CoreGui)
        ScreenGui.Name = "Notification"
        ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        local MainFrame = Instance.new("Frame", ScreenGui)
        MainFrame.BorderSizePixel = 0
        MainFrame.BackgroundColor3 = Color3.fromRGB(10, 140, 175)
        MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        MainFrame.BackgroundTransparency = 1
        MainFrame.Size = UDim2.new(0, 0, 0, 0)

        local Corner = Instance.new("UICorner", MainFrame)
        Corner.CornerRadius = UDim.new(0, 8)

        local Stroke = Instance.new("UIStroke", MainFrame)
        Stroke.Color = Color3.fromRGB(0, 220, 255)
        Stroke.Thickness = 4

        local Label = Instance.new("TextLabel", MainFrame)
        Label.TextWrapped = true
        Label.BackgroundTransparency = 1
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 20
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.Text = Text
        Label.TextTransparency = 1

        local mainFrameHeight = 80
        local ButtonClicked = nil

        if Buttons and #Buttons > 0 then
            mainFrameHeight = 120

            local ButtonsFrame = Instance.new("Frame", MainFrame)
            ButtonsFrame.BackgroundTransparency = 1
            ButtonsFrame.Size = UDim2.new(1, -20, 0, 40)
            ButtonsFrame.Position = UDim2.new(0, 10, 1, -50)

            local UIListLayout = Instance.new("UIListLayout", ButtonsFrame)
            UIListLayout.FillDirection = Enum.FillDirection.Horizontal
            UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
            UIListLayout.Padding = UDim.new(0, 10)

            for _, button in ipairs(Buttons) do
                local Btn = Instance.new("TextButton", ButtonsFrame)
                Btn.TextWrapped = true
                Btn.Text = button.Text or "Button"
                Btn.Size = UDim2.new(0.4, 0, 0, 30)
                Btn.BackgroundColor3 = Color3.fromRGB(0, 220, 255)
                Btn.Font = Enum.Font.Gotham
                Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
                Btn.TextSize = 16

                local BtnCorner = Instance.new("UICorner", Btn)
                BtnCorner.CornerRadius = UDim.new(0, 6)

                local BtnStroke = Instance.new("UIStroke", Btn)
                BtnStroke.Color = Color3.fromRGB(255, 255, 255)

                Btn.MouseEnter:Connect(function()
                    TweenService:Create(Btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 255, 200)}):Play()
                end)

                Btn.MouseLeave:Connect(function()
                    TweenService:Create(Btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 220, 255)}):Play()
                end)

                Btn.MouseButton1Click:Connect(function()
                    if button.Callback then
                        button.Callback()
                    end
                    ButtonClicked = button.Text

                    TweenService:Create(MainFrame, TweenInfo.new(TweenTime), {BackgroundTransparency = 1, Size = UDim2.new(0, 0, 0, 0)}):Play()
                    task.wait(TweenTime)
                    ScreenGui:Destroy()
                end)
            end

            ButtonsFrame.Parent = MainFrame
        end

        Label.Size = UDim2.new(1, -20, 0, mainFrameHeight - 40)
        Label.Position = UDim2.new(0, 10, 0, 7)

        TweenService:Create(MainFrame, TweenInfo.new(TweenTime, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Size = UDim2.new(0, 300, 0, mainFrameHeight), BackgroundTransparency = 0}):Play()
        TweenService:Create(Label, TweenInfo.new(TweenTime), {TextTransparency = 0}):Play()

        if DisappearTime then
            task.delay(DisappearTime, function()
                if not ButtonClicked then
                    TweenService:Create(MainFrame, TweenInfo.new(TweenTime), {BackgroundTransparency = 1, Size = UDim2.new(0, 0, 0, 0)}):Play()
                    task.wait(TweenTime)
                    ScreenGui:Destroy()
                end
            end)
        end

        if WaitForClick and Buttons and #Buttons > 0 then
            repeat task.wait() until ButtonClicked ~= nil
            return ButtonClicked
        end
    end

    return N
